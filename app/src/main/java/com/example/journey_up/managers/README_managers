This package will store the 'ObjectManager' which is in charge of managing the
sub-managers. It will be in charge of telling sub-managers to sort() their
ArrayLists and be responsible for clearing/resetting levels.

Objects will be created and sorted during loading time. For sorting, each region
will be merge sorted. Having separate regions is accomplished by having a 2-d
ArrayList where each index of the 1st dimension represents the current region of
the player. This is done to implement a proximity type of search, so that only
relevant areas are being rendered and searched for player-object collision. The
ordering inside each array is dependent on the location of the object's x and
y-axis positions.

On top of this will be a binary search of the specific region. Order of incrementation
will start from top-left and read left to right before searching down. This is similar
to reading a book.

******************************************************************************************

Example of on-screen objects translated into a searchable array:

display:
        object 1          object 3

                 object 2

        object 5          object 4


array: {object 1, object 3, object 2, object 5, object 4}

******************************************************************************************

objectManager will be in charge of sorting all sub-manager arrayLists. sorting thread is
created when objectManager.sort() is called.

ex: Class ObjectManager {
        void sort() {
            PlatformManager.sort();
            ItemManager.sort();
            ...
        }
    }

objectManager will also be in charge of resetting/clearing objects from sub-manager
arrayLists.

ex: Class ObjectManager {
        void reset() {
            PlatformManager.reset();
            InGameTimerThread.cancel();
            ...
        }
    }