This package is going to store the lower level logic for the purpose of dynamic scaling
across multiple mobile devices.

Things like dynamic rendering, proper memory management, proper threading will be
implemented here. This package will also include other functions that are more specific
to the game, like a 'Camera' class to imitate player movement, or a 'PlayerBank' to
manage a players collected items.

My threads will involve the following:
    1. MainThread: will run draw() and update() in sync. draw() will draw all objects on screen.
        update() will change the coordinates of the objects being drawn. Exists inside the app.

    2. InternalTimerThread: will run a internal clock to track amount of time played. This will
        also restore lives after a certain amount of time has passed. Exists inside the app.

    3. InGameTimerThread: will run a thread of in-game countdowns. (might merge with InternalTimerThread).
        Exists inside the level.

    4. SortingThread: will be used during loading screens to sort ObjectManger array of objects
        depending on their x and y coordinates. Must communicate with mainThreads draw() to
        render a proper loading bar. Exists inside the level loading.

    5. CollisionThread: This will be an in-game collision detection algorithm, which runs a binary
        search for player-object collision. Exists inside the level

